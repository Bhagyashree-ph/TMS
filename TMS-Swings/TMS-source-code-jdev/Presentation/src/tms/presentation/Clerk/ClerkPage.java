/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tms.presentation.Clerk;

import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import tms.business.ClerkOperations;
import tms.business.impl.ClerkOperationsImpl;
import tms.persistence.entity.OffenceDetailEO;
import tms.persistence.entity.OffenceTypeEO;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import tms.persistence.entity.RegistrationEO;
import tms.persistence.entity.UserEO;
import tms.persistence.utility.Validator;
import tms.presentation.Login.LoginPage;

/**
 *
 * @author bhagya.shree
 */
public class ClerkPage extends javax.swing.JFrame {

    private final ClerkOperations clerk = new ClerkOperationsImpl();

    private File uploadedFile = null;

    /**
     * Creates new form ClerkPage
     */
    public ClerkPage() {
        initComponents();
        addRoleList();
        setVisible(Boolean.TRUE);
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tabPanelClerkOper = new javax.swing.JTabbedPane();
        tabClerkHome = new javax.swing.JPanel();
        labelWcClerk = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tabViewHistory = new javax.swing.JPanel();
        panelClerkViewHistory = new javax.swing.JPanel();
        labelViewOffenceHistoryByClerk = new javax.swing.JLabel();
        labelSearchHistoryToViewByClerk = new javax.swing.JLabel();
        txtfldSearchHistoryToViewByClerk = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableViewHistoryToViewByCalerk = new javax.swing.JTable();
        btnViewHistoryByClerkToRead = new javax.swing.JButton();
        tabRaiseOffence = new javax.swing.JPanel();
        panelClerkRaiseOffence = new javax.swing.JPanel();
        labelRaiseOffenceByClerkTitle = new javax.swing.JLabel();
        labelOffenceDateTimeToAddByClerk = new javax.swing.JLabel();
        labelPlaceToAddByClerk = new javax.swing.JLabel();
        labelProofToAddByClerk = new javax.swing.JLabel();
        labelVehicleNoToAddByClerk = new javax.swing.JLabel();
        labelOffenceIDToAddByClerk = new javax.swing.JLabel();
        labelRecordedByToAddByClerk = new javax.swing.JLabel();
        labelPenaltyStatusToAddByClerk = new javax.swing.JLabel();
        btnRaiseOffenceByClerk = new javax.swing.JButton();
        spinOffenceDateTimeToAddByClerk = new javax.swing.JSpinner();
        txtfldRecordedByToAddByClerk = new javax.swing.JTextField();
        txtfldVehicleNoToAddByClerk = new javax.swing.JTextField();
        txtfldPlaceToAddByClerk = new javax.swing.JTextField();
        comBoxOffenceIDToRaiseByClerk = new javax.swing.JComboBox<>();
        comBoxPenaltyStatusToAddByClerk = new javax.swing.JComboBox<>();
        btnProofToAddByClerk = new javax.swing.JButton();
        tabClearOffence = new javax.swing.JPanel();
        panelClerkClearOffence = new javax.swing.JPanel();
        labelClearOffenceByClerk = new javax.swing.JLabel();
        txtfldSearchHistoryToClearByClerk = new javax.swing.JTextField();
        labelSearchHistoryToClearByClerk = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableViewHistoryToClearByClerk = new javax.swing.JTable();
        btnViewHistoryToClearByClerk = new javax.swing.JButton();
        btnclearOffenceByClerk = new javax.swing.JButton();
        tabGenerateReport = new javax.swing.JPanel();
        labelReportsTitleOfClerk = new javax.swing.JLabel();
        labelReportType = new javax.swing.JLabel();
        comboxReportType = new javax.swing.JComboBox<>();
        btnGenerateReportByClerk = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabPanelClerkOper.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        tabPanelClerkOper.setPreferredSize(getSize());

        tabClerkHome.setRequestFocusEnabled(false);

        labelWcClerk.setFont(new java.awt.Font("Bodoni MT", 2, 48)); // NOI18N
        labelWcClerk.setText("Welcome Clerk..!");

        btnLogout.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 18)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tms/presentation/icons/clerk.jpg"))); // NOI18N
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setPreferredSize(tabClerkHome.getSize());

        javax.swing.GroupLayout tabClerkHomeLayout = new javax.swing.GroupLayout(tabClerkHome);
        tabClerkHome.setLayout(tabClerkHomeLayout);
        tabClerkHomeLayout.setHorizontalGroup(
            tabClerkHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabClerkHomeLayout.createSequentialGroup()
                .addGap(730, 730, 730)
                .addComponent(labelWcClerk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(150, 150, 150))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabClerkHomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        tabClerkHomeLayout.setVerticalGroup(
            tabClerkHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabClerkHomeLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(labelWcClerk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(535, 535, 535))
            .addGroup(tabClerkHomeLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        tabPanelClerkOper.addTab("Home", tabClerkHome);

        labelViewOffenceHistoryByClerk.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        labelViewOffenceHistoryByClerk.setForeground(new java.awt.Color(204, 0, 51));
        labelViewOffenceHistoryByClerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelViewOffenceHistoryByClerk.setText("View Offence History");

        labelSearchHistoryToViewByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelSearchHistoryToViewByClerk.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSearchHistoryToViewByClerk.setText("Registration Number");

        txtfldSearchHistoryToViewByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldSearchHistoryToViewByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchHistoryToViewByClerkActionPerformed(evt);
            }
        });

        tableViewHistoryToViewByCalerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        tableViewHistoryToViewByCalerk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Sl No.", "Offence Detail ID", "Offence Date and Time", "Place", "Proof", "Registration Number", "Offence ID", "Recorded By", "Penalty Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableViewHistoryToViewByCalerk.setRowHeight(40);
        tableViewHistoryToViewByCalerk.setRowHeight(40);
        tableViewHistoryToViewByCalerk.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableViewHistoryToViewByCalerk);

        btnViewHistoryByClerkToRead.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnViewHistoryByClerkToRead.setText("View Histpry");
        btnViewHistoryByClerkToRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHistoryByClerkToReadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelClerkViewHistoryLayout = new javax.swing.GroupLayout(panelClerkViewHistory);
        panelClerkViewHistory.setLayout(panelClerkViewHistoryLayout);
        panelClerkViewHistoryLayout.setHorizontalGroup(
            panelClerkViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClerkViewHistoryLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(labelViewOffenceHistoryByClerk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(4, 4, 4))
            .addComponent(jScrollPane1)
            .addGroup(panelClerkViewHistoryLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(labelSearchHistoryToViewByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(txtfldSearchHistoryToViewByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 311, Short.MAX_VALUE)
                .addComponent(btnViewHistoryByClerkToRead, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );
        panelClerkViewHistoryLayout.setVerticalGroup(
            panelClerkViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClerkViewHistoryLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(labelViewOffenceHistoryByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(panelClerkViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelClerkViewHistoryLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(panelClerkViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfldSearchHistoryToViewByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSearchHistoryToViewByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnViewHistoryByClerkToRead, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(164, 164, 164))
        );

        javax.swing.GroupLayout tabViewHistoryLayout = new javax.swing.GroupLayout(tabViewHistory);
        tabViewHistory.setLayout(tabViewHistoryLayout);
        tabViewHistoryLayout.setHorizontalGroup(
            tabViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkViewHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabViewHistoryLayout.setVerticalGroup(
            tabViewHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkViewHistory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPanelClerkOper.addTab("View offence history", tabViewHistory);

        panelClerkRaiseOffence.setLayout(new java.awt.GridBagLayout());

        labelRaiseOffenceByClerkTitle.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        labelRaiseOffenceByClerkTitle.setForeground(new java.awt.Color(204, 0, 51));
        labelRaiseOffenceByClerkTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelRaiseOffenceByClerkTitle.setText("Raise Offence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 1034;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        panelClerkRaiseOffence.add(labelRaiseOffenceByClerkTitle, gridBagConstraints);

        labelOffenceDateTimeToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelOffenceDateTimeToAddByClerk.setText("Offence Date and Time");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 32;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(59, 393, 0, 0);
        panelClerkRaiseOffence.add(labelOffenceDateTimeToAddByClerk, gridBagConstraints);

        labelPlaceToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelPlaceToAddByClerk.setText("Place");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 114;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 400, 0, 0);
        panelClerkRaiseOffence.add(labelPlaceToAddByClerk, gridBagConstraints);

        labelProofToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelProofToAddByClerk.setText("Proof");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 400, 0, 0);
        panelClerkRaiseOffence.add(labelProofToAddByClerk, gridBagConstraints);

        labelVehicleNoToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelVehicleNoToAddByClerk.setText("Vehicle Number");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 39;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 400, 0, 0);
        panelClerkRaiseOffence.add(labelVehicleNoToAddByClerk, gridBagConstraints);

        labelOffenceIDToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelOffenceIDToAddByClerk.setText("Offence ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 49;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 400, 0, 0);
        panelClerkRaiseOffence.add(labelOffenceIDToAddByClerk, gridBagConstraints);

        labelRecordedByToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelRecordedByToAddByClerk.setText("Recorded By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 400, 0, 0);
        panelClerkRaiseOffence.add(labelRecordedByToAddByClerk, gridBagConstraints);

        labelPenaltyStatusToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelPenaltyStatusToAddByClerk.setText("Penalty Status");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 19;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 393, 0, 0);
        panelClerkRaiseOffence.add(labelPenaltyStatusToAddByClerk, gridBagConstraints);

        btnRaiseOffenceByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnRaiseOffenceByClerk.setText("Raise offence");
        btnRaiseOffenceByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseOffenceByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(68, 533, 0, 0);
        panelClerkRaiseOffence.add(btnRaiseOffenceByClerk, gridBagConstraints);

        spinOffenceDateTimeToAddByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        spinOffenceDateTimeToAddByClerk.setModel(new javax.swing.SpinnerDateModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = -2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(60, 18, 0, 0);
        panelClerkRaiseOffence.add(spinOffenceDateTimeToAddByClerk, gridBagConstraints);

        txtfldRecordedByToAddByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldRecordedByToAddByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldRecordedByToAddByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 173;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 24, 0, 0);
        panelClerkRaiseOffence.add(txtfldRecordedByToAddByClerk, gridBagConstraints);

        txtfldVehicleNoToAddByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldVehicleNoToAddByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldVehicleNoToAddByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 182;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 24, 0, 0);
        panelClerkRaiseOffence.add(txtfldVehicleNoToAddByClerk, gridBagConstraints);

        txtfldPlaceToAddByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldPlaceToAddByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldPlaceToAddByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.ipadx = 211;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 14, 0, 0);
        panelClerkRaiseOffence.add(txtfldPlaceToAddByClerk, gridBagConstraints);

        comBoxOffenceIDToRaiseByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        comBoxOffenceIDToRaiseByClerk.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                comBoxOffenceIDToRaiseByClerkComponentAdded(evt);
            }
        });
        comBoxOffenceIDToRaiseByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxOffenceIDToRaiseByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 134;
        gridBagConstraints.ipady = -1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 24, 0, 0);
        panelClerkRaiseOffence.add(comBoxOffenceIDToRaiseByClerk, gridBagConstraints);

        comBoxPenaltyStatusToAddByClerk.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        comBoxPenaltyStatusToAddByClerk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unpaid", "Paid" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 33;
        gridBagConstraints.ipady = -1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(29, 35, 0, 0);
        panelClerkRaiseOffence.add(comBoxPenaltyStatusToAddByClerk, gridBagConstraints);

        btnProofToAddByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        btnProofToAddByClerk.setText("Upload");
        btnProofToAddByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProofToAddByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 26;
        gridBagConstraints.ipady = -3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 24, 0, 0);
        panelClerkRaiseOffence.add(btnProofToAddByClerk, gridBagConstraints);

        javax.swing.GroupLayout tabRaiseOffenceLayout = new javax.swing.GroupLayout(tabRaiseOffence);
        tabRaiseOffence.setLayout(tabRaiseOffenceLayout);
        tabRaiseOffenceLayout.setHorizontalGroup(
            tabRaiseOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkRaiseOffence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabRaiseOffenceLayout.setVerticalGroup(
            tabRaiseOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkRaiseOffence, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPanelClerkOper.addTab("Raise offence", tabRaiseOffence);

        labelClearOffenceByClerk.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        labelClearOffenceByClerk.setForeground(new java.awt.Color(204, 0, 51));
        labelClearOffenceByClerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelClearOffenceByClerk.setText("Clear Offence");

        txtfldSearchHistoryToClearByClerk.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldSearchHistoryToClearByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchHistoryToClearByClerkActionPerformed(evt);
            }
        });

        labelSearchHistoryToClearByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        labelSearchHistoryToClearByClerk.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSearchHistoryToClearByClerk.setText("Registration Number");

        tableViewHistoryToClearByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        tableViewHistoryToClearByClerk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Sl No.", "Offence Detail ID", "Offence Date and Time", "Place", "Proof", "Registration Number", "Offence ID", "Recorded By", "Penalty Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableViewHistoryToClearByClerk.setRowHeight(40);
        tableViewHistoryToClearByClerk.setRowHeight(40);
        tableViewHistoryToClearByClerk.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tableViewHistoryToClearByClerk);

        btnViewHistoryToClearByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnViewHistoryToClearByClerk.setText("View History");
        btnViewHistoryToClearByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewHistoryToClearByClerkActionPerformed(evt);
            }
        });

        btnclearOffenceByClerk.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnclearOffenceByClerk.setText("Clear Offence");
        btnclearOffenceByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearOffenceByClerkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelClerkClearOffenceLayout = new javax.swing.GroupLayout(panelClerkClearOffence);
        panelClerkClearOffence.setLayout(panelClerkClearOffenceLayout);
        panelClerkClearOffenceLayout.setHorizontalGroup(
            panelClerkClearOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
            .addComponent(labelClearOffenceByClerk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelClerkClearOffenceLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(labelSearchHistoryToClearByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(txtfldSearchHistoryToClearByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 372, Short.MAX_VALUE)
                .addComponent(btnViewHistoryToClearByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelClerkClearOffenceLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnclearOffenceByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(455, 455, 455))
        );
        panelClerkClearOffenceLayout.setVerticalGroup(
            panelClerkClearOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelClerkClearOffenceLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(labelClearOffenceByClerk)
                .addGap(85, 85, 85)
                .addGroup(panelClerkClearOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtfldSearchHistoryToClearByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSearchHistoryToClearByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewHistoryToClearByClerk))
                .addGap(76, 76, 76)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addGap(145, 145, 145)
                .addComponent(btnclearOffenceByClerk, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(102, 102, 102))
        );

        javax.swing.GroupLayout tabClearOffenceLayout = new javax.swing.GroupLayout(tabClearOffence);
        tabClearOffence.setLayout(tabClearOffenceLayout);
        tabClearOffenceLayout.setHorizontalGroup(
            tabClearOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkClearOffence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabClearOffenceLayout.setVerticalGroup(
            tabClearOffenceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelClerkClearOffence, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPanelClerkOper.addTab("Clear Offence", tabClearOffence);

        tabGenerateReport.setLayout(new java.awt.GridBagLayout());

        labelReportsTitleOfClerk.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        labelReportsTitleOfClerk.setForeground(new java.awt.Color(204, 0, 51));
        labelReportsTitleOfClerk.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelReportsTitleOfClerk.setText("Reports");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 1151;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
        tabGenerateReport.add(labelReportsTitleOfClerk, gridBagConstraints);

        labelReportType.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        labelReportType.setText("Report type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(96, 421, 0, 0);
        tabGenerateReport.add(labelReportType, gridBagConstraints);

        comboxReportType.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        comboxReportType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Registration Number", "Offence Type", "Date", " " }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = -70;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(100, 163, 0, 0);
        tabGenerateReport.add(comboxReportType, gridBagConstraints);

        btnGenerateReportByClerk.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        btnGenerateReportByClerk.setText("Generate Report");
        btnGenerateReportByClerk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateReportByClerkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(135, 635, 277, 0);
        tabGenerateReport.add(btnGenerateReportByClerk, gridBagConstraints);

        tabPanelClerkOper.addTab("Reports", tabGenerateReport);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelClerkOper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabPanelClerkOper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGenerateReportByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateReportByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGenerateReportByClerkActionPerformed

    private void btnViewHistoryToClearByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHistoryToClearByClerkActionPerformed
        // TODO add your handling code here:
        String regNo = txtfldSearchHistoryToClearByClerk.getText();
        if (regNo.isEmpty() || !(Validator.validateRegNo(regNo))) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Registration number", "Ivalid Registration Number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        clear(regNo);
    }//GEN-LAST:event_btnViewHistoryToClearByClerkActionPerformed

    private void txtfldSearchHistoryToClearByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchHistoryToClearByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchHistoryToClearByClerkActionPerformed

    private void btnProofToAddByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProofToAddByClerkActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "Images", "jpg", "jpeg", "png", "gif");
        fileChooser.setFileFilter(filter);
        int returnValue = fileChooser.showOpenDialog(panelClerkRaiseOffence);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            uploadedFile = fileChooser.getSelectedFile();
        } else {
            System.out.println("not opened");
            JOptionPane.showMessageDialog(this, "Some error occured", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnProofToAddByClerkActionPerformed

    private void comBoxOffenceIDToRaiseByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxOffenceIDToRaiseByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxOffenceIDToRaiseByClerkActionPerformed

    private void comBoxOffenceIDToRaiseByClerkComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_comBoxOffenceIDToRaiseByClerkComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_comBoxOffenceIDToRaiseByClerkComponentAdded

    private void txtfldPlaceToAddByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldPlaceToAddByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldPlaceToAddByClerkActionPerformed

    private void txtfldVehicleNoToAddByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldVehicleNoToAddByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldVehicleNoToAddByClerkActionPerformed

    private void txtfldRecordedByToAddByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldRecordedByToAddByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldRecordedByToAddByClerkActionPerformed

    private void btnRaiseOffenceByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseOffenceByClerkActionPerformed

        // TODO add your handling code here:
        java.util.Date entOffDateNTime = (java.util.Date) spinOffenceDateTimeToAddByClerk.getValue();
        Timestamp offDateTime = new Timestamp(entOffDateNTime.getTime());
        String place = txtfldPlaceToAddByClerk.getText();

        byte[] proof = null;
        try (FileInputStream readFile = new FileInputStream(uploadedFile);) {
            int lines = readFile.available();
            proof = new byte[lines];
            readFile.read(proof);
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "File not found", "Some error occured", JOptionPane.ERROR_MESSAGE);
            return;
        }
            String registrationNo = txtfldVehicleNoToAddByClerk.getText();
            RegistrationEO registration = null;
        try {
            registration = clerk.fetchRegistrationDetails(registrationNo);
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Some error occured", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

            String offenceID = (String) comBoxOffenceIDToRaiseByClerk.getSelectedItem();
            OffenceTypeEO offence = null;
            try {
                offence = clerk.fetchOffenceByID(offenceID);
            } catch (Exception ex) {
                Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this,"Some error occured", "Error",JOptionPane.ERROR_MESSAGE);
            return;
            }

            String recordedBy = txtfldRecordedByToAddByClerk.getText();
            UserEO user = null;

        try {
            user = clerk.fetchUserByID(recordedBy);
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Some error occured", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

            String status = (String) comBoxPenaltyStatusToAddByClerk.getSelectedItem();
            
            if(place.isEmpty() || proof.length==0 || registrationNo.isEmpty() || offenceID.isEmpty() || recordedBy.isEmpty())
                JOptionPane.showMessageDialog(this, "Please fill all the details.", "Incomplete information", JOptionPane.ERROR_MESSAGE);
            
            OffenceDetailEO offenceDetail = new OffenceDetailEO("ABC", offDateTime, place, proof, registration, offence, user, status);
            int row = 0;
        try {
            row = clerk.raiseOffence(offenceDetail);
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(this,"Some error occured", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }

            if (row > 0) {
                System.out.println("Offence Raised...");
                JOptionPane.showMessageDialog(this, "Offence raised against " + registrationNo);

            } else {
                System.out.println("No offence raised...");
                JOptionPane.showMessageDialog(this, "Failed to raise an offence", "Some error occured", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_btnRaiseOffenceByClerkActionPerformed

    private void btnViewHistoryByClerkToReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewHistoryByClerkToReadActionPerformed
        // TODO add your handling code here:
        String regNo = txtfldSearchHistoryToViewByClerk.getText();
        if (regNo.isEmpty() || !(Validator.validateRegNo(regNo))) {
            JOptionPane.showMessageDialog(this, "Please enter a valid Registration number", "Ivalid Registration Number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        ArrayList<OffenceDetailEO> offDetails = null;
        try {
            offDetails = clerk.fetchAllOffencesCommited(regNo);
            DefaultTableModel model = (DefaultTableModel) tableViewHistoryToViewByCalerk.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
            int count = 1;
            if(offDetails == null)
                JOptionPane.showMessageDialog(this, "No Offences found..!", "Not found", JOptionPane.ERROR_MESSAGE);
        
            for (OffenceDetailEO offenceDetailEO : offDetails) {
                model.addRow(new Object[]{
                    count,
                    offenceDetailEO.getOffenseDetailID(),
                    offenceDetailEO.getOffenseDateTime(),
                    offenceDetailEO.getPlace(),
                    offenceDetailEO.getImage(),
                    offenceDetailEO.getRegistration().getRegistrationID(),
                    offenceDetailEO.getOffense().getOffenseID(),
                    offenceDetailEO.getUser().getUserName(),
                    offenceDetailEO.getPenaltyStatus()
                });
                count++;
            }
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Some error occured", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnViewHistoryByClerkToReadActionPerformed

    private void txtfldSearchHistoryToViewByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchHistoryToViewByClerkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchHistoryToViewByClerkActionPerformed

    private void btnclearOffenceByClerkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearOffenceByClerkActionPerformed
        String entRegNo = null;
        try {
            // TODO add your handling code here:
            entRegNo = txtfldSearchHistoryToClearByClerk.getText();
            if(!entRegNo.isEmpty()){
                if(!Validator.validateRegNo(entRegNo))
                    JOptionPane.showMessageDialog(this, "Invalid registration number", "Invalid input", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Please enter registration number", "Invalid input", JOptionPane.ERROR_MESSAGE);
            }
            ArrayList<OffenceDetailEO> details = clerk.fetchAllOffencesCommited(entRegNo);
            System.out.println(details);
            int count = 0;
            int row = 0;
            
            for (OffenceDetailEO detail : details) {
                if (detail.getPenaltyStatus().equals("Unpaid")) {
                    boolean isSelected = (boolean) tableViewHistoryToClearByClerk.getValueAt(row++, 0);
                    if (isSelected) {
                        detail.setPenaltyStatus("Paid");
                        clerk.clearOffense(detail);
                        count++;
                    }
                }
            }
            if (count > 0) {
                System.out.println(count + " details updated..");
                JOptionPane.showMessageDialog(this, count + " details updated");
                clear(entRegNo);
            } else {
                System.out.println("No details found..!");
                JOptionPane.showMessageDialog(this, "No details found..!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Some error occurredwhile updating.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnclearOffenceByClerkActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        LoginPage login = new LoginPage();
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void addRoleList() {
        try {
            ArrayList<OffenceTypeEO> offType = clerk.fetchAllOffenceTypes();
            for (OffenceTypeEO offenceTypeEO : offType) {
                comBoxOffenceIDToRaiseByClerk.addItem(offenceTypeEO.getOffenseID());
            }
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClerkPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClerkPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClerkPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClerkPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClerkPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerateReportByClerk;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnProofToAddByClerk;
    private javax.swing.JButton btnRaiseOffenceByClerk;
    private javax.swing.JButton btnViewHistoryByClerkToRead;
    private javax.swing.JButton btnViewHistoryToClearByClerk;
    private javax.swing.JButton btnclearOffenceByClerk;
    private javax.swing.JComboBox<String> comBoxOffenceIDToRaiseByClerk;
    private javax.swing.JComboBox<String> comBoxPenaltyStatusToAddByClerk;
    private javax.swing.JComboBox<String> comboxReportType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel labelClearOffenceByClerk;
    private javax.swing.JLabel labelOffenceDateTimeToAddByClerk;
    private javax.swing.JLabel labelOffenceIDToAddByClerk;
    private javax.swing.JLabel labelPenaltyStatusToAddByClerk;
    private javax.swing.JLabel labelPlaceToAddByClerk;
    private javax.swing.JLabel labelProofToAddByClerk;
    private javax.swing.JLabel labelRaiseOffenceByClerkTitle;
    private javax.swing.JLabel labelRecordedByToAddByClerk;
    private javax.swing.JLabel labelReportType;
    private javax.swing.JLabel labelReportsTitleOfClerk;
    private javax.swing.JLabel labelSearchHistoryToClearByClerk;
    private javax.swing.JLabel labelSearchHistoryToViewByClerk;
    private javax.swing.JLabel labelVehicleNoToAddByClerk;
    private javax.swing.JLabel labelViewOffenceHistoryByClerk;
    private javax.swing.JLabel labelWcClerk;
    private javax.swing.JPanel panelClerkClearOffence;
    private javax.swing.JPanel panelClerkRaiseOffence;
    private javax.swing.JPanel panelClerkViewHistory;
    private javax.swing.JSpinner spinOffenceDateTimeToAddByClerk;
    private javax.swing.JPanel tabClearOffence;
    private javax.swing.JPanel tabClerkHome;
    private javax.swing.JPanel tabGenerateReport;
    private javax.swing.JTabbedPane tabPanelClerkOper;
    private javax.swing.JPanel tabRaiseOffence;
    private javax.swing.JPanel tabViewHistory;
    private javax.swing.JTable tableViewHistoryToClearByClerk;
    private javax.swing.JTable tableViewHistoryToViewByCalerk;
    private javax.swing.JTextField txtfldPlaceToAddByClerk;
    private javax.swing.JTextField txtfldRecordedByToAddByClerk;
    private javax.swing.JTextField txtfldSearchHistoryToClearByClerk;
    private javax.swing.JTextField txtfldSearchHistoryToViewByClerk;
    private javax.swing.JTextField txtfldVehicleNoToAddByClerk;
    // End of variables declaration//GEN-END:variables

    private ArrayList<OffenceDetailEO> clear(String regNo) {

        ArrayList<OffenceDetailEO> details = new ArrayList<>();
        try {
            ArrayList<OffenceDetailEO> offDetails = clerk.fetchAllOffencesCommited(regNo);
            DefaultTableModel model = (DefaultTableModel) tableViewHistoryToClearByClerk.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
            int count = 1;
            for (OffenceDetailEO offenceDetailEO : offDetails) {
                if (offenceDetailEO.getPenaltyStatus().equals("Unpaid")) {
                    model.addRow(new Object[]{
                        false,
                        count,
                        offenceDetailEO.getOffenseDetailID(),
                        offenceDetailEO.getOffenseDateTime(),
                        offenceDetailEO.getPlace(),
                        offenceDetailEO.getImage(),
                        offenceDetailEO.getRegistration().getRegistrationID(),
                        offenceDetailEO.getOffense().getOffenseID(),
                        offenceDetailEO.getUser().getUserName(),
                        offenceDetailEO.getPenaltyStatus()
                    });
                    details.add(offenceDetailEO);
                    count++;
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ClerkPage.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No offences found..!");
        }

        return details;
    }
}
