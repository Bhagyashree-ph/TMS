/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tms.presentation.Admin;

import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import tms.business.AdminOperations;
import tms.business.impl.AdminOperationsImpl;
import tms.persistence.entity.RoleEO;
import tms.persistence.entity.UserEO;
import javax.swing.*;
import java.awt.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import tms.persistence.utility.Validator;
import tms.presentation.Login.LoginPage;

/**
 *
 * @author bhagya.shree
 */
public class AdminFrame extends javax.swing.JFrame {

    private final AdminOperations admin = new AdminOperationsImpl();

    /**
     * Creates new form AdminFrame
     */
    public AdminFrame() {
        initComponents();
        viewRoles();
        viewUsers();
        addRoles();
        setVisible(Boolean.TRUE);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        //addImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tabPanelAdminOper = new javax.swing.JTabbedPane();
        tabAdminHome = new javax.swing.JPanel();
        labelWcAdmin = new javax.swing.JLabel();
        bgImg = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        tabRoles = new javax.swing.JPanel();
        tabPanelManageRole = new javax.swing.JTabbedPane();
        tabViewRoles = new javax.swing.JPanel();
        labelSearchRoleName = new javax.swing.JLabel();
        txtfldSearchRoleName = new javax.swing.JTextField();
        toggBtnSearchRoleName = new javax.swing.JToggleButton();
        labelTitle = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableOfRoles = new javax.swing.JTable();
        tabAddRoles = new javax.swing.JPanel();
        labelAddRoleTitle = new javax.swing.JLabel();
        labelNewRoleName = new javax.swing.JLabel();
        txtfldAddRole = new javax.swing.JTextField();
        btnAddRole = new javax.swing.JButton();
        tabDeleteRoles = new javax.swing.JPanel();
        labelSearchRoleNameForDelete = new javax.swing.JLabel();
        txtfldSearchRoleNameForDelete = new javax.swing.JTextField();
        toggBtnSearchRoleNameForDelete = new javax.swing.JToggleButton();
        labelDeleteRolTitle = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelRoleIDToDelete = new javax.swing.JLabel();
        txtfldRoleIDToDelete = new javax.swing.JTextField();
        labelRoleNameToDelete = new javax.swing.JLabel();
        txtfldRoleNameToDelete = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        tabUpdateRoles = new javax.swing.JPanel();
        labelSearcchRoleNameForUpdate = new javax.swing.JLabel();
        txtfldSearchRoleNameForUpdate = new javax.swing.JTextField();
        toggBtnSearchRoleNameForUpdate = new javax.swing.JToggleButton();
        labelUpdateRoleTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        labelOldDetailsOfRole = new javax.swing.JLabel();
        labelOldRoleID = new javax.swing.JLabel();
        txtfldOldRoleID = new javax.swing.JTextField();
        labelOldRoleName = new javax.swing.JLabel();
        txtfldOldRoleName = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        labelNewDetailsOfRole = new javax.swing.JLabel();
        labelUpdatedRoleID = new javax.swing.JLabel();
        txtfldUpdatedRoleID = new javax.swing.JTextField();
        labelNewRole_Name = new javax.swing.JLabel();
        txtfldNewRole_Name = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        labelUpdatedDetailsOfRole = new javax.swing.JLabel();
        labelUpdatedRoleName = new javax.swing.JLabel();
        txtfldUpdatedRoleName = new javax.swing.JTextField();
        btnUpdateToModify = new javax.swing.JButton();
        btnBackToHomeFromModifyRole = new javax.swing.JButton();
        tabUsers = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        labelUserOverview = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableOfUsers = new javax.swing.JTable();
        labelUserIDToView = new javax.swing.JLabel();
        txtfldUserIDToView = new javax.swing.JTextField();
        btnSearchUserToView = new javax.swing.JButton();
        yabAddUser = new javax.swing.JPanel();
        labelAddNewUser = new javax.swing.JLabel();
        labelEmailIDToAdd = new javax.swing.JLabel();
        labelPasswordToAdd = new javax.swing.JLabel();
        labelUserNameToAdd = new javax.swing.JLabel();
        labelAssignRoleToAdd = new javax.swing.JLabel();
        labelMobileNoToAdd = new javax.swing.JLabel();
        txtfldUserNameToAdd = new javax.swing.JTextField();
        txtfldEmailIDToAdd = new javax.swing.JTextField();
        txtfldMobileNoToAdd = new javax.swing.JTextField();
        txtfldPasswordToAdd = new javax.swing.JTextField();
        comBoxRoleToAdd = new javax.swing.JComboBox<>();
        btnAddUser = new javax.swing.JButton();
        tabModifyUser = new javax.swing.JPanel();
        labelModifyUser = new javax.swing.JLabel();
        labelPasswordToModify = new javax.swing.JLabel();
        labelEmailIDToModify = new javax.swing.JLabel();
        labelMobileNoToModify = new javax.swing.JLabel();
        labelRoleToModify = new javax.swing.JLabel();
        labelSearchUserIDToModify = new javax.swing.JLabel();
        btnUpdateToModifyUsers = new javax.swing.JButton();
        txtfldPasswordToModify = new javax.swing.JTextField();
        txtfldEmailIDToModify = new javax.swing.JTextField();
        txtfldMobileNumberToModify = new javax.swing.JTextField();
        txtfldSearchUserIDToModify = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        labelUserNameToModify = new javax.swing.JLabel();
        txtfldUserNameToModify = new javax.swing.JTextField();
        togBtnSearchUser = new javax.swing.JToggleButton();
        jLabel9 = new javax.swing.JLabel();
        txtfldRoleToModify = new javax.swing.JTextField();
        labelUserIDToModify = new javax.swing.JLabel();
        txtfldUserIDToModify = new javax.swing.JTextField();
        btnDeleteToModifyUsers = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabPanelAdminOper.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        tabPanelAdminOper.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 24)); // NOI18N
        tabPanelAdminOper.setPreferredSize(getSize());

        tabAdminHome.setPreferredSize(tabPanelAdminOper.getSize());
        tabAdminHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelWcAdmin.setFont(new java.awt.Font("Bodoni MT", 2, 70)); // NOI18N
        labelWcAdmin.setForeground(new java.awt.Color(255, 255, 255));
        labelWcAdmin.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelWcAdmin.setText("Welcome Admin..!");
        labelWcAdmin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        labelWcAdmin.setPreferredSize(tabAdminHome.getSize());
        tabAdminHome.add(labelWcAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 680, 1520, 106));

        bgImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tms/presentation/icons/Admin.jpg"))); // NOI18N
        bgImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bgImg.setPreferredSize(tabAdminHome.getSize());
        tabAdminHome.add(bgImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1560, 910));
        bgImg.getAccessibleContext().setAccessibleName("bgImg");

        btnLogout.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 18)); // NOI18N
        btnLogout.setText("Logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });
        tabAdminHome.add(btnLogout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1610, 30, 110, 40));

        tabPanelAdminOper.addTab("Home", tabAdminHome);

        tabPanelManageRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 20)); // NOI18N
        tabPanelManageRole.setPreferredSize(tabRoles.getSize());

        tabViewRoles.setLayout(new java.awt.GridBagLayout());

        labelSearchRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        labelSearchRoleName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSearchRoleName.setText("Role Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.ipady = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(79, 416, 0, 0);
        tabViewRoles.add(labelSearchRoleName, gridBagConstraints);

        txtfldSearchRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        txtfldSearchRoleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchRoleNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 201;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(90, 97, 0, 0);
        tabViewRoles.add(txtfldSearchRoleName, gridBagConstraints);

        toggBtnSearchRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 18)); // NOI18N
        toggBtnSearchRoleName.setText("Search");
        toggBtnSearchRoleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggBtnSearchRoleNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(87, 336, 0, 0);
        tabViewRoles.add(toggBtnSearchRoleName, gridBagConstraints);

        labelTitle.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(204, 0, 51));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Roles Overview");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 1250;
        gridBagConstraints.ipady = 166;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        tabViewRoles.add(labelTitle, gridBagConstraints);

        tableOfRoles.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        tableOfRoles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl No", "Role ID", "Role Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOfRoles.setRowHeight(30);
        tableOfRoles.getTableHeader().setReorderingAllowed(false);
        tableOfRoles.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                tableOfRolesInputMethodTextChanged(evt);
            }
        });
        jScrollPane2.setViewportView(tableOfRoles);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1530;
        gridBagConstraints.ipady = 309;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(101, 0, 76, 0);
        tabViewRoles.add(jScrollPane2, gridBagConstraints);

        tabPanelManageRole.addTab("View Roles", tabViewRoles);

        tabAddRoles.setLayout(new java.awt.GridBagLayout());

        labelAddRoleTitle.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        labelAddRoleTitle.setForeground(new java.awt.Color(204, 0, 51));
        labelAddRoleTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAddRoleTitle.setText("Add New Role");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 1332;
        gridBagConstraints.ipady = 67;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(33, 10, 0, 0);
        tabAddRoles.add(labelAddRoleTitle, gridBagConstraints);

        labelNewRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        labelNewRoleName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelNewRoleName.setText("Role Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 63;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(137, 540, 0, 0);
        tabAddRoles.add(labelNewRoleName, gridBagConstraints);

        txtfldAddRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 20)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 162;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(147, 120, 0, 0);
        tabAddRoles.add(txtfldAddRole, gridBagConstraints);

        btnAddRole.setBackground(new java.awt.Color(102, 153, 255));
        btnAddRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 2, 18)); // NOI18N
        btnAddRole.setText("Add Role");
        btnAddRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(87, 0, 447, 0);
        tabAddRoles.add(btnAddRole, gridBagConstraints);

        tabPanelManageRole.addTab("Add Role", tabAddRoles);

        tabDeleteRoles.setPreferredSize(tabPanelManageRole.getSize());
        tabDeleteRoles.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelSearchRoleNameForDelete.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelSearchRoleNameForDelete.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSearchRoleNameForDelete.setText("Role Name");
        tabDeleteRoles.add(labelSearchRoleNameForDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 317, 42));

        txtfldSearchRoleNameForDelete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldSearchRoleNameForDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchRoleNameForDeleteActionPerformed(evt);
            }
        });
        tabDeleteRoles.add(txtfldSearchRoleNameForDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, 156, 33));

        toggBtnSearchRoleNameForDelete.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        toggBtnSearchRoleNameForDelete.setText("Search");
        toggBtnSearchRoleNameForDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggBtnSearchRoleNameForDeleteActionPerformed(evt);
            }
        });
        tabDeleteRoles.add(toggBtnSearchRoleNameForDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 160, 121, 33));

        labelDeleteRolTitle.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        labelDeleteRolTitle.setForeground(new java.awt.Color(204, 0, 51));
        labelDeleteRolTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDeleteRolTitle.setText("Delete Role");
        tabDeleteRoles.add(labelDeleteRolTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1560, 69));

        jLabel2.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 24)); // NOI18N
        jLabel2.setText("Role details you want to delete");
        tabDeleteRoles.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 470, 40));

        labelRoleIDToDelete.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelRoleIDToDelete.setText("Role  ID");
        tabDeleteRoles.add(labelRoleIDToDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 114, 34));

        txtfldRoleIDToDelete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        tabDeleteRoles.add(txtfldRoleIDToDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, 130, 34));

        labelRoleNameToDelete.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelRoleNameToDelete.setText("Role Name");
        tabDeleteRoles.add(labelRoleNameToDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 160, 30));

        txtfldRoleNameToDelete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldRoleNameToDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldRoleNameToDeleteActionPerformed(evt);
            }
        });
        tabDeleteRoles.add(txtfldRoleNameToDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 420, 137, 33));

        btnDelete.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        tabDeleteRoles.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 530, 125, 36));

        tabPanelManageRole.addTab("Delete Role", tabDeleteRoles);

        labelSearcchRoleNameForUpdate.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelSearcchRoleNameForUpdate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelSearcchRoleNameForUpdate.setText("Role Name");

        txtfldSearchRoleNameForUpdate.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldSearchRoleNameForUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchRoleNameForUpdateActionPerformed(evt);
            }
        });

        toggBtnSearchRoleNameForUpdate.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 20)); // NOI18N
        toggBtnSearchRoleNameForUpdate.setText("Search");
        toggBtnSearchRoleNameForUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggBtnSearchRoleNameForUpdateActionPerformed(evt);
            }
        });

        labelUpdateRoleTitle.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        labelUpdateRoleTitle.setForeground(new java.awt.Color(204, 0, 51));
        labelUpdateRoleTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelUpdateRoleTitle.setText("Modify  Role");

        labelOldDetailsOfRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 20)); // NOI18N
        labelOldDetailsOfRole.setText("Old Details of Role");

        labelOldRoleID.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        labelOldRoleID.setText("Role ID");

        txtfldOldRoleID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtfldOldRoleID.setEnabled(false);

        labelOldRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        labelOldRoleName.setText("Role Name");

        txtfldOldRoleName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtfldOldRoleName.setEnabled(false);

        labelNewDetailsOfRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 24)); // NOI18N
        labelNewDetailsOfRole.setText("New Details of Role");

        labelUpdatedRoleID.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelUpdatedRoleID.setText("Role ID");

        txtfldUpdatedRoleID.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldUpdatedRoleID.setEnabled(false);

        labelNewRole_Name.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelNewRole_Name.setText("New Role Name");

        txtfldNewRole_Name.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N

        labelUpdatedDetailsOfRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 24)); // NOI18N
        labelUpdatedDetailsOfRole.setText("Updated Details of Role");

        labelUpdatedRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelUpdatedRoleName.setText("Role Name");

        txtfldUpdatedRoleName.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        txtfldUpdatedRoleName.setEnabled(false);
        txtfldUpdatedRoleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldUpdatedRoleNameActionPerformed(evt);
            }
        });

        btnUpdateToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 20)); // NOI18N
        btnUpdateToModify.setText("Update");
        btnUpdateToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateToModifyActionPerformed(evt);
            }
        });

        btnBackToHomeFromModifyRole.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 18)); // NOI18N
        btnBackToHomeFromModifyRole.setText("Back to Home");
        btnBackToHomeFromModifyRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackToHomeFromModifyRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabUpdateRolesLayout = new javax.swing.GroupLayout(tabUpdateRoles);
        tabUpdateRoles.setLayout(tabUpdateRolesLayout);
        tabUpdateRolesLayout.setHorizontalGroup(
            tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(labelOldDetailsOfRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(564, 564, 564))
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(labelNewDetailsOfRole, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                .addGap(1305, 1305, 1305))
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3)
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator1))
                    .addComponent(jSeparator2))
                .addGap(18, 18, 18))
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(928, 928, 928)
                                .addComponent(toggBtnSearchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(688, 688, 688)
                                .addComponent(txtfldSearchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(labelSearcchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelUpdateRoleTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 1535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(txtfldOldRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelOldRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(103, 103, 103)
                        .addComponent(labelOldRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(45, 45, 45)
                        .addComponent(txtfldOldRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(labelUpdatedRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(txtfldUpdatedRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)
                        .addComponent(labelUpdatedRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtfldUpdatedRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(703, 703, 703)
                        .addComponent(btnBackToHomeFromModifyRole, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(labelUpdatedDetailsOfRole, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelNewRole_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(txtfldNewRole_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdateToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(439, 439, 439))
        );
        tabUpdateRolesLayout.setVerticalGroup(
            tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(toggBtnSearchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(txtfldSearchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(labelSearcchRoleNameForUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(labelUpdateRoleTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(labelOldDetailsOfRole, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelOldRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOldRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfldOldRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldOldRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(labelNewDetailsOfRole, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(labelNewRole_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtfldNewRole_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(labelUpdatedDetailsOfRole, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfldUpdatedRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(tabUpdateRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(labelUpdatedRoleID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtfldUpdatedRoleID, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(labelUpdatedRoleName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83)
                        .addComponent(btnBackToHomeFromModifyRole, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabUpdateRolesLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnUpdateToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        tabPanelManageRole.addTab("Modify Role", tabUpdateRoles);

        javax.swing.GroupLayout tabRolesLayout = new javax.swing.GroupLayout(tabRoles);
        tabRoles.setLayout(tabRolesLayout);
        tabRolesLayout.setHorizontalGroup(
            tabRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelManageRole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tabRolesLayout.setVerticalGroup(
            tabRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelManageRole, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tabPanelAdminOper.addTab("Manage Roles", tabRoles);

        jTabbedPane1.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 20)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 51));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Users Overview");

        tableOfUsers.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        tableOfUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sl No.", "User ID", "Username", "Password", "Email", "Phone Number", "Role Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableOfUsers.setRowHeight(40);
        tableOfUsers.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableOfUsers);

        labelUserIDToView.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        labelUserIDToView.setText("User ID");

        txtfldUserIDToView.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldUserIDToView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldUserIDToViewActionPerformed(evt);
            }
        });

        btnSearchUserToView.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnSearchUserToView.setText("Search");
        btnSearchUserToView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchUserToViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout labelUserOverviewLayout = new javax.swing.GroupLayout(labelUserOverview);
        labelUserOverview.setLayout(labelUserOverviewLayout);
        labelUserOverviewLayout.setHorizontalGroup(
            labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(labelUserOverviewLayout.createSequentialGroup()
                .addGroup(labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelUserOverviewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(labelUserOverviewLayout.createSequentialGroup()
                        .addGroup(labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(labelUserOverviewLayout.createSequentialGroup()
                                .addGap(555, 555, 555)
                                .addComponent(labelUserIDToView, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(147, 147, 147)
                                .addComponent(txtfldUserIDToView, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(labelUserOverviewLayout.createSequentialGroup()
                                .addGap(714, 714, 714)
                                .addComponent(btnSearchUserToView, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 553, Short.MAX_VALUE)))
                .addContainerGap())
        );
        labelUserOverviewLayout.setVerticalGroup(
            labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(labelUserOverviewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(labelUserOverviewLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearchUserToView, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))
                    .addGroup(labelUserOverviewLayout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(labelUserOverviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtfldUserIDToView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelUserIDToView, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        jTabbedPane1.addTab("View Users", labelUserOverview);

        labelAddNewUser.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        labelAddNewUser.setForeground(new java.awt.Color(153, 0, 51));
        labelAddNewUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelAddNewUser.setText("Add New User");

        labelEmailIDToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelEmailIDToAdd.setText("Email id");

        labelPasswordToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelPasswordToAdd.setText("Password");

        labelUserNameToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelUserNameToAdd.setText("User Name");

        labelAssignRoleToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelAssignRoleToAdd.setText("Assign Role");

        labelMobileNoToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelMobileNoToAdd.setText("Mobile number");

        txtfldUserNameToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        txtfldUserNameToAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldUserNameToAddActionPerformed(evt);
            }
        });

        txtfldEmailIDToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        txtfldEmailIDToAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldEmailIDToAddActionPerformed(evt);
            }
        });

        txtfldMobileNoToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        txtfldMobileNoToAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldMobileNoToAddActionPerformed(evt);
            }
        });

        txtfldPasswordToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        txtfldPasswordToAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldPasswordToAddActionPerformed(evt);
            }
        });

        comBoxRoleToAdd.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N

        btnAddUser.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnAddUser.setText("Add User");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout yabAddUserLayout = new javax.swing.GroupLayout(yabAddUser);
        yabAddUser.setLayout(yabAddUserLayout);
        yabAddUserLayout.setHorizontalGroup(
            yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelAddNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, yabAddUserLayout.createSequentialGroup()
                .addGap(0, 534, Short.MAX_VALUE)
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, yabAddUserLayout.createSequentialGroup()
                        .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelEmailIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelUserNameToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPasswordToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelMobileNoToAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(labelAssignRoleToAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(157, 157, 157)
                        .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtfldPasswordToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldUserNameToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldEmailIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldMobileNoToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comBoxRoleToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(531, 531, 531))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, yabAddUserLayout.createSequentialGroup()
                        .addComponent(btnAddUser, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(697, 697, 697))))
        );
        yabAddUserLayout.setVerticalGroup(
            yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(yabAddUserLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(labelAddNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfldUserNameToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelUserNameToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtfldPasswordToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPasswordToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmailIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldEmailIDToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMobileNoToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldMobileNoToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(yabAddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(yabAddUserLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(labelAssignRoleToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(yabAddUserLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(comBoxRoleToAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                .addComponent(btnAddUser)
                .addGap(109, 109, 109))
        );

        jTabbedPane1.addTab("Add User", yabAddUser);

        labelModifyUser.setFont(new java.awt.Font("Times New Roman", 3, 40)); // NOI18N
        labelModifyUser.setForeground(new java.awt.Color(153, 0, 51));
        labelModifyUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelModifyUser.setText("Modify User");

        labelPasswordToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelPasswordToModify.setText("Password");

        labelEmailIDToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelEmailIDToModify.setText("Email id");

        labelMobileNoToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelMobileNoToModify.setText("Mobile Number");

        labelRoleToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 18)); // NOI18N
        labelRoleToModify.setText("Role");

        labelSearchUserIDToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        labelSearchUserIDToModify.setText("User ID");

        btnUpdateToModifyUsers.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnUpdateToModifyUsers.setText("Update");
        btnUpdateToModifyUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateToModifyUsersActionPerformed(evt);
            }
        });

        txtfldPasswordToModify.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldPasswordToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldPasswordToModifyActionPerformed(evt);
            }
        });

        txtfldEmailIDToModify.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldEmailIDToModify.setEnabled(false);
        txtfldEmailIDToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldEmailIDToModifyActionPerformed(evt);
            }
        });

        txtfldMobileNumberToModify.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldMobileNumberToModify.setEnabled(false);
        txtfldMobileNumberToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldMobileNumberToModifyActionPerformed(evt);
            }
        });

        txtfldSearchUserIDToModify.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtfldSearchUserIDToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldSearchUserIDToModifyActionPerformed(evt);
            }
        });

        labelUserNameToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelUserNameToModify.setText("User Name");

        txtfldUserNameToModify.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldUserNameToModify.setEnabled(false);
        txtfldUserNameToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldUserNameToModifyActionPerformed(evt);
            }
        });

        togBtnSearchUser.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 24)); // NOI18N
        togBtnSearchUser.setText("Search User");
        togBtnSearchUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togBtnSearchUserActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 3, 24)); // NOI18N
        jLabel9.setText("User Details ");

        txtfldRoleToModify.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldRoleToModify.setEnabled(false);
        txtfldRoleToModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfldRoleToModifyActionPerformed(evt);
            }
        });

        labelUserIDToModify.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 0, 22)); // NOI18N
        labelUserIDToModify.setText("User ID");

        txtfldUserIDToModify.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        txtfldUserIDToModify.setEnabled(false);

        btnDeleteToModifyUsers.setFont(new java.awt.Font("DejaVu Math TeX Gyre", 1, 22)); // NOI18N
        btnDeleteToModifyUsers.setText("Delete");
        btnDeleteToModifyUsers.setToolTipText("");
        btnDeleteToModifyUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteToModifyUsersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tabModifyUserLayout = new javax.swing.GroupLayout(tabModifyUser);
        tabModifyUser.setLayout(tabModifyUserLayout);
        tabModifyUserLayout.setHorizontalGroup(
            tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabModifyUserLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(labelModifyUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(tabModifyUserLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(1294, 1294, 1294))
            .addGroup(tabModifyUserLayout.createSequentialGroup()
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(467, 467, 467)
                        .addComponent(labelSearchUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(txtfldSearchUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(206, 206, 206)
                        .addComponent(togBtnSearchUser))
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelMobileNoToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtfldMobileNumberToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(510, 510, 510)
                        .addComponent(btnUpdateToModifyUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(220, 220, 220)
                        .addComponent(btnDeleteToModifyUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabModifyUserLayout.createSequentialGroup()
                                .addComponent(labelUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(txtfldUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tabModifyUserLayout.createSequentialGroup()
                                .addComponent(labelPasswordToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55)
                                .addComponent(txtfldPasswordToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(99, 99, 99)
                        .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabModifyUserLayout.createSequentialGroup()
                                .addComponent(labelUserNameToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)
                                .addComponent(txtfldUserNameToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabModifyUserLayout.createSequentialGroup()
                                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelEmailIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelRoleToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtfldRoleToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtfldEmailIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 289, Short.MAX_VALUE))
            .addComponent(jSeparator5)
        );
        tabModifyUserLayout.setVerticalGroup(
            tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabModifyUserLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(labelModifyUser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(labelSearchUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(togBtnSearchUser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtfldSearchUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(labelUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelUserNameToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldUserNameToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldUserIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65)
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPasswordToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtfldPasswordToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelEmailIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtfldEmailIDToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelMobileNoToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtfldMobileNumberToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelRoleToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabModifyUserLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(txtfldRoleToModify, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(135, 135, 135)
                .addGroup(tabModifyUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDeleteToModifyUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnUpdateToModifyUsers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modify User", tabModifyUser);

        javax.swing.GroupLayout tabUsersLayout = new javax.swing.GroupLayout(tabUsers);
        tabUsers.setLayout(tabUsersLayout);
        tabUsersLayout.setHorizontalGroup(
            tabUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        tabUsersLayout.setVerticalGroup(
            tabUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        tabPanelAdminOper.addTab("Manage Users", tabUsers);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelAdminOper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelAdminOper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtfldSearchRoleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchRoleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchRoleNameActionPerformed

    private void txtfldSearchRoleNameForDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchRoleNameForDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchRoleNameForDeleteActionPerformed

    private void txtfldSearchRoleNameForUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchRoleNameForUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchRoleNameForUpdateActionPerformed

    private void txtfldUpdatedRoleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldUpdatedRoleNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldUpdatedRoleNameActionPerformed

    private void txtfldRoleNameToDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldRoleNameToDeleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldRoleNameToDeleteActionPerformed

    private void btnBackToHomeFromModifyRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackToHomeFromModifyRoleActionPerformed
        // TODO add your handling code here:
        //this.dispose();
        tabPanelAdminOper.setSelectedComponent(tabAdminHome);
        txtfldSearchRoleNameForUpdate.setText("");
        txtfldUpdatedRoleName.setText("");
        txtfldUpdatedRoleID.setText("");
        txtfldNewRole_Name.setText("");
        txtfldOldRoleName.setText("");
        txtfldOldRoleID.setText("");

    }//GEN-LAST:event_btnBackToHomeFromModifyRoleActionPerformed

    private void txtfldUserNameToAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldUserNameToAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldUserNameToAddActionPerformed

    private void txtfldEmailIDToAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldEmailIDToAddActionPerformed
        // TODO add your handling code here:
        String email = txtfldEmailIDToAdd.getText();
        if (!Validator.validateEmail(email)) {
            JOptionPane.showMessageDialog(this, email + " is not a valid email", "Invalid email", JOptionPane.ERROR_MESSAGE);
            return;
        } else
            System.out.println("Valid email..!");
    }//GEN-LAST:event_txtfldEmailIDToAddActionPerformed

    private void txtfldMobileNoToAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldMobileNoToAddActionPerformed
        // TODO add your handling code here:
        String mobNo = txtfldMobileNoToAdd.getText();
        if (!Validator.validateMobile(mobNo)) {
            JOptionPane.showMessageDialog(this, mobNo + " is not a valid Mobile number", "Invalid mobile number", JOptionPane.ERROR_MESSAGE);
            return;
        } else
            System.out.println("Valid mobile number..!");
    }//GEN-LAST:event_txtfldMobileNoToAddActionPerformed

    private void txtfldPasswordToAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldPasswordToAddActionPerformed
        // TODO add your handling code here:
        String pass = txtfldPasswordToAdd.getText();
        if (!Validator.validatePassword(pass)) {
            JOptionPane.showMessageDialog(this, pass + " is not a valid password", "Invalid password", JOptionPane.ERROR_MESSAGE);
            return;
        } else
            System.out.println("Valid password..!");
    }//GEN-LAST:event_txtfldPasswordToAddActionPerformed

    private void btnUpdateToModifyUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateToModifyUsersActionPerformed
        // TODO add your handling code here:
        String userName = txtfldSearchUserIDToModify.getText();
        if (userName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            UserEO user = admin.findByUserID(userName);
            String newPassword = txtfldPasswordToModify.getText();

            if (!Validator.validatePassword(newPassword)) {
                JOptionPane.showMessageDialog(this, newPassword + " is not a valid password.\nPassword must be strong with alphabets, caps, special symbols, numbers, and minimum 8 characters and less than 16 characters.", "Invalid password", JOptionPane.ERROR_MESSAGE);
                return;
            }

            user.setPassword(newPassword);
            int row = admin.updateUser(user);
            if (row > 0) {
                System.out.println("User updated..");
                JOptionPane.showMessageDialog(this, "User details updated..!");
            }
        } catch (Exception ex) {
            System.out.println("User not updated..");
            JOptionPane.showMessageDialog(this, "Some error occured while updating user details", "Error", JOptionPane.ERROR_MESSAGE);
        }
        txtfldSearchUserIDToModify.setText("");
        txtfldUserIDToModify.setText("");
        txtfldUserNameToModify.setText("");
        txtfldPasswordToModify.setText("");
        txtfldEmailIDToModify.setText("");
        txtfldMobileNumberToModify.setText("");
        txtfldRoleToModify.setText("");
    }//GEN-LAST:event_btnUpdateToModifyUsersActionPerformed

    private void txtfldPasswordToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldPasswordToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldPasswordToModifyActionPerformed

    private void txtfldEmailIDToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldEmailIDToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldEmailIDToModifyActionPerformed

    private void txtfldMobileNumberToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldMobileNumberToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldMobileNumberToModifyActionPerformed

    private void txtfldSearchUserIDToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldSearchUserIDToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldSearchUserIDToModifyActionPerformed

    private void txtfldUserNameToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldUserNameToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldUserNameToModifyActionPerformed

    private void togBtnSearchUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togBtnSearchUserActionPerformed
        // TODO add your handling code here
        String entUserId = txtfldSearchUserIDToModify.getText();
        if (entUserId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            UserEO user = admin.findByUserID(entUserId);
            if (user != null) {
                txtfldUserIDToModify.setText(user.getUserID());
                txtfldUserNameToModify.setText(user.getUserName());
                txtfldPasswordToModify.setText(user.getPassword());
                txtfldEmailIDToModify.setText(user.getEmail());
                txtfldMobileNumberToModify.setText(user.getPhoneNumber());
                txtfldRoleToModify.setText(user.getRole().getRoleName());
            } else {
                System.out.println("No such user");
                JOptionPane.showMessageDialog(this, "User Not Found..!", "Invalid user", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "User Not Found..!", "Invalid user", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_togBtnSearchUserActionPerformed

    private void toggBtnSearchRoleNameForDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggBtnSearchRoleNameForDeleteActionPerformed
        // TODO add your handling code here:
        if (!toggBtnSearchRoleName.isSelected()) {
            String enteredRoleName = txtfldSearchRoleNameForDelete.getText();
            if (enteredRoleName.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
                return;
            }
            System.out.println(enteredRoleName);
            try {
                RoleEO role = admin.findRoleByID(enteredRoleName);
                System.out.println(role);
                if (role != null) {
                    txtfldRoleIDToDelete.setText(Integer.toString(role.getRoleID()));
                    txtfldRoleNameToDelete.setText(enteredRoleName);
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (Exception ex) {

                JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_toggBtnSearchRoleNameForDeleteActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String enteredRoleName = txtfldSearchRoleNameForDelete.getText();
        if (enteredRoleName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int row = 0;
        try {
            row = admin.deleteRole(enteredRoleName);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some error occured while deleting.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
//              Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (row > 0) {
            System.out.println(enteredRoleName + " is deleted..");
            JOptionPane.showMessageDialog(this, "Role deleted.");
        } else {
            System.out.println("0 rows deleted..");
            JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
            
        }
        txtfldRoleIDToDelete.setText("");
        txtfldRoleNameToDelete.setText("");
        txtfldSearchRoleNameForDelete.setText("");
        viewRoles();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void toggBtnSearchRoleNameForUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggBtnSearchRoleNameForUpdateActionPerformed
        // TODO add your handling code here:
        boolean selected = toggBtnSearchRoleNameForUpdate.isSelected();
        if (selected) {
            txtfldOldRoleID.setEditable(Boolean.TRUE);
            String enteredRoleName = txtfldSearchRoleNameForUpdate.getText();
            if (enteredRoleName.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
                return;
            }

            RoleEO role = null;
            try {
                role = admin.findRoleByID(enteredRoleName);
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Some error occured.", "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }
            if (role != null) {
                txtfldOldRoleID.setText(Integer.toString(role.getRoleID()));
                txtfldOldRoleName.setText(role.getRoleName());
            } else {
                System.out.println("role is not available");
                JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
    }//GEN-LAST:event_toggBtnSearchRoleNameForUpdateActionPerformed

    private void btnUpdateToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateToModifyActionPerformed
        // TODO add your handling code here:
        String enteredNewRoleName = txtfldNewRole_Name.getText();
        String searchedRole = txtfldSearchRoleNameForUpdate.getText();
        if (enteredNewRoleName.isEmpty() || searchedRole.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RoleEO role = null;
        try {
            role = admin.findRoleByID(searchedRole);
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Some error occured while deleting.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        if (role != null) {
            role.setRoleName(enteredNewRoleName);
            int row = 0;
            try {
                row = admin.UpdateRole(role);
                if (row > 0) {
                    RoleEO updatedRole = null;
                    try {
                        updatedRole = admin.findRoleByID(enteredNewRoleName);
                        txtfldUpdatedRoleID.setText(Integer.toString(updatedRole.getRoleID()));
                        txtfldUpdatedRoleName.setText(updatedRole.getRoleName());
                    } catch (Exception ex1) {
                        Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex1);
                        JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } else {
                    System.out.println("0 rows updated...");
                    JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (Exception ex) {
                Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Some Error Occured", "Role not updated", JOptionPane.ERROR_MESSAGE);
                return;
            }

        } else {
            System.out.println("Entered roleName not found");
            JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
            return;
        }
        viewRoles();
    }//GEN-LAST:event_btnUpdateToModifyActionPerformed

    private void btnAddRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoleActionPerformed
        // TODO add your handling code here:
        String enteredRoleName = txtfldAddRole.getText();
        if (enteredRoleName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            if (admin.findRoleByID(enteredRoleName) != null) {
                JOptionPane.showMessageDialog(this, enteredRoleName + " already exists.", "Invalid password", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        RoleEO role = new RoleEO();
        role.setRoleName(enteredRoleName);
        int row = 0;
        try {
            row = admin.addNewRole(role);
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Invalid Role Name", "Role not found", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (row > 0) {
            System.out.println(row + " role added.");
            JOptionPane.showMessageDialog(this, "New Role Added");
            txtfldAddRole.setText("");
            viewRoles();
        } else {
            System.out.println("0 roles added.");
            JOptionPane.showMessageDialog(this, "Some Error Occured", "Role not added", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnAddRoleActionPerformed

    private void tableOfRolesInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_tableOfRolesInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_tableOfRolesInputMethodTextChanged

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
         // TODO add your handling code here:
        String entUserName = txtfldUserNameToAdd.getText();
        String entPassword = txtfldPasswordToAdd.getText();
        String entEmail = txtfldEmailIDToAdd.getText();
        String entPhone = txtfldMobileNoToAdd.getText();
        String chosenRole = (String) comBoxRoleToAdd.getSelectedItem();

        if (entPhone.isEmpty() || entUserName.isEmpty() || entPassword.isEmpty() || entEmail.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please fill in all fields", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            if (admin.findByUserID(entUserName) != null) {
                JOptionPane.showMessageDialog(this, entUserName + " already exists.", "Invalid username", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (!Validator.validatePassword(entPassword)) {
            JOptionPane.showMessageDialog(this, entPassword + " is not a valid password.\nPassword must be strong with alphabets, caps, special symbols, numbers, and minimum 8 characters and less than 16 characters.", "Invalid password", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Validator.validateMobile(entPhone)) {
            JOptionPane.showMessageDialog(this, entPhone + " is not a valid Mobile number", "Invalid mobile number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!Validator.validateEmail(entEmail)) {
            JOptionPane.showMessageDialog(this, entEmail + " is not a valid email.", "Invalid email", JOptionPane.ERROR_MESSAGE);
            return;
        }
        RoleEO role = null;
        try {
            role = admin.findRoleByID(chosenRole);
            UserEO user = new UserEO("U0010", entUserName, entPassword, entEmail, entPhone, role);

            int row = admin.addNewUser(user);
            if (row > 0) {
                System.out.println("New user added..");
                JOptionPane.showMessageDialog(this, "New user added successfully.");
                viewUsers();
                txtfldUserNameToAdd.setText("");
                txtfldPasswordToAdd.setText("");
                txtfldEmailIDToAdd.setText("");
                txtfldMobileNoToAdd.setText("");
                return;
            } else {
                System.out.println("0 roles added..");
                JOptionPane.showMessageDialog(this, "Some error occured", "User not added", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnDeleteToModifyUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteToModifyUsersActionPerformed
        // TODO add your handling code here:
        String userID = txtfldUserIDToModify.getText();
        if (userID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid userID", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int row = 0;
        try {
            row = admin.deleteUser(userID);
            if (row > 0) {
                System.out.println(userID + " deleted..");
                JOptionPane.showMessageDialog(this, "User deleted.");
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("user not deleted..");
            JOptionPane.showMessageDialog(this, "No such user", "Some error occured", JOptionPane.ERROR_MESSAGE);
            return;
        }
        txtfldSearchUserIDToModify.setText("");
        txtfldUserIDToModify.setText("");
        txtfldUserNameToModify.setText("");
        txtfldPasswordToModify.setText("");
        txtfldEmailIDToModify.setText("");
        txtfldMobileNumberToModify.setText("");
        txtfldRoleToModify.setText("");
        viewUsers();
    }//GEN-LAST:event_btnDeleteToModifyUsersActionPerformed

    private void btnSearchUserToViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchUserToViewActionPerformed
        // TODO add your handling code here:
        String entUserId = txtfldUserIDToView.getText();
        if (entUserId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid user name", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
        UserEO user = null;
        try {
            user = admin.findByUserID(entUserId);
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Some error occured", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (user != null) {
            DefaultTableModel model = (DefaultTableModel) tableOfUsers.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
            model.addRow(new Object[]{
                1,
                user.getUserID(),
                user.getUserName(),
                user.getPassword(),
                user.getEmail(),
                user.getPhoneNumber(),
                user.getRole().getRoleName()
            });
        } else {
            JOptionPane.showMessageDialog(this, "User not found", "Invalid user name", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSearchUserToViewActionPerformed

    private void toggBtnSearchRoleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggBtnSearchRoleNameActionPerformed
        // TODO add your handling code here:
        String entRoleName = txtfldSearchRoleName.getText();
        if (entRoleName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Enter a valid Role name", "Incomplete Information", JOptionPane.ERROR_MESSAGE);
            return;
        }
//        txtfldSearchRoleName.setEnabled(Boolean.FALSE);

        RoleEO role = null;
        try {
            role = admin.findRoleByID(entRoleName);
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Some error occurred", "error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (role == null) {
            JOptionPane.showMessageDialog(this, "Role not found", "Not found", JOptionPane.ERROR_MESSAGE);
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tableOfRoles.getModel();
        while (model.getRowCount() != 0) {
            model.removeRow(0);
        }
        model.addRow(new Object[]{
            1,
            role.getRoleID(),
            role.getRoleName()
        });

    }//GEN-LAST:event_toggBtnSearchRoleNameActionPerformed

    private void txtfldRoleToModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldRoleToModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldRoleToModifyActionPerformed

    private void txtfldUserIDToViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfldUserIDToViewActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfldUserIDToViewActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        LoginPage login = new LoginPage();
        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void addRoles() {
        try {
            ArrayList<RoleEO> roles = admin.findAllRoles();
            for (RoleEO role : roles) {
                comBoxRoleToAdd.addItem(role.getRoleName());
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewRoles() {
        try {
            ArrayList<RoleEO> roles = admin.findAllRoles();
            DefaultTableModel model = (DefaultTableModel) tableOfRoles.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
            int count = 1;
            for (RoleEO role : roles) {
                model.addRow(new Object[]{
                    count,
                    role.getRoleID(),
                    role.getRoleName()
                });
                count++;
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void viewUsers() {
        try {
            ArrayList<UserEO> users = admin.findAllUsers();
            DefaultTableModel model = (DefaultTableModel) tableOfUsers.getModel();
            while (model.getRowCount() != 0) {
                model.removeRow(0);
            }
            int count = 1;
            for (UserEO user : users) {
                model.addRow(new Object[]{
                    count,
                    user.getUserID(),
                    user.getUserName(),
                    user.getPassword(),
                    user.getEmail(),
                    user.getPhoneNumber(),
                    user.getRole().getRoleName()
                });
                count++;
            }
        } catch (Exception ex) {
            Logger.getLogger(AdminFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void addImage() {
        ImageIcon icon = new ImageIcon("C:\\Users\\bhagya.shree\\OneDrive - iqgateway pvt ltd\\Training\\TMS\\Source Code\\TMS_App\\Presentation\\src\\tms\\presentation\\icons\\Admin.jpg");
        Image img = icon.getImage();
        Image scaledImg = img.getScaledInstance(tabAdminHome.getWidth(), tabAdminHome.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImg);
        JLabel labelBgImg = new JLabel(scaledIcon);
        labelBgImg.setBounds(0, 0, tabAdminHome.getWidth(), tabAdminHome.getHeight());
        labelBgImg.setLayout(new GridBagLayout());
        tabAdminHome.add(labelBgImg, BorderLayout.CENTER);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AdminFrame().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgImg;
    private javax.swing.JButton btnAddRole;
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnBackToHomeFromModifyRole;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteToModifyUsers;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearchUserToView;
    private javax.swing.JButton btnUpdateToModify;
    private javax.swing.JButton btnUpdateToModifyUsers;
    private javax.swing.JComboBox<String> comBoxRoleToAdd;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelAddNewUser;
    private javax.swing.JLabel labelAddRoleTitle;
    private javax.swing.JLabel labelAssignRoleToAdd;
    private javax.swing.JLabel labelDeleteRolTitle;
    private javax.swing.JLabel labelEmailIDToAdd;
    private javax.swing.JLabel labelEmailIDToModify;
    private javax.swing.JLabel labelMobileNoToAdd;
    private javax.swing.JLabel labelMobileNoToModify;
    private javax.swing.JLabel labelModifyUser;
    private javax.swing.JLabel labelNewDetailsOfRole;
    private javax.swing.JLabel labelNewRoleName;
    private javax.swing.JLabel labelNewRole_Name;
    private javax.swing.JLabel labelOldDetailsOfRole;
    private javax.swing.JLabel labelOldRoleID;
    private javax.swing.JLabel labelOldRoleName;
    private javax.swing.JLabel labelPasswordToAdd;
    private javax.swing.JLabel labelPasswordToModify;
    private javax.swing.JLabel labelRoleIDToDelete;
    private javax.swing.JLabel labelRoleNameToDelete;
    private javax.swing.JLabel labelRoleToModify;
    private javax.swing.JLabel labelSearcchRoleNameForUpdate;
    private javax.swing.JLabel labelSearchRoleName;
    private javax.swing.JLabel labelSearchRoleNameForDelete;
    private javax.swing.JLabel labelSearchUserIDToModify;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelUpdateRoleTitle;
    private javax.swing.JLabel labelUpdatedDetailsOfRole;
    private javax.swing.JLabel labelUpdatedRoleID;
    private javax.swing.JLabel labelUpdatedRoleName;
    private javax.swing.JLabel labelUserIDToModify;
    private javax.swing.JLabel labelUserIDToView;
    private javax.swing.JLabel labelUserNameToAdd;
    private javax.swing.JLabel labelUserNameToModify;
    private javax.swing.JPanel labelUserOverview;
    private javax.swing.JLabel labelWcAdmin;
    private javax.swing.JPanel tabAddRoles;
    private javax.swing.JPanel tabAdminHome;
    private javax.swing.JPanel tabDeleteRoles;
    private javax.swing.JPanel tabModifyUser;
    private javax.swing.JTabbedPane tabPanelAdminOper;
    private javax.swing.JTabbedPane tabPanelManageRole;
    private javax.swing.JPanel tabRoles;
    private javax.swing.JPanel tabUpdateRoles;
    private javax.swing.JPanel tabUsers;
    private javax.swing.JPanel tabViewRoles;
    private javax.swing.JTable tableOfRoles;
    private javax.swing.JTable tableOfUsers;
    private javax.swing.JToggleButton togBtnSearchUser;
    private javax.swing.JToggleButton toggBtnSearchRoleName;
    private javax.swing.JToggleButton toggBtnSearchRoleNameForDelete;
    private javax.swing.JToggleButton toggBtnSearchRoleNameForUpdate;
    private javax.swing.JTextField txtfldAddRole;
    private javax.swing.JTextField txtfldEmailIDToAdd;
    private javax.swing.JTextField txtfldEmailIDToModify;
    private javax.swing.JTextField txtfldMobileNoToAdd;
    private javax.swing.JTextField txtfldMobileNumberToModify;
    private javax.swing.JTextField txtfldNewRole_Name;
    private javax.swing.JTextField txtfldOldRoleID;
    private javax.swing.JTextField txtfldOldRoleName;
    private javax.swing.JTextField txtfldPasswordToAdd;
    private javax.swing.JTextField txtfldPasswordToModify;
    private javax.swing.JTextField txtfldRoleIDToDelete;
    private javax.swing.JTextField txtfldRoleNameToDelete;
    private javax.swing.JTextField txtfldRoleToModify;
    private javax.swing.JTextField txtfldSearchRoleName;
    private javax.swing.JTextField txtfldSearchRoleNameForDelete;
    private javax.swing.JTextField txtfldSearchRoleNameForUpdate;
    private javax.swing.JTextField txtfldSearchUserIDToModify;
    private javax.swing.JTextField txtfldUpdatedRoleID;
    private javax.swing.JTextField txtfldUpdatedRoleName;
    private javax.swing.JTextField txtfldUserIDToModify;
    private javax.swing.JTextField txtfldUserIDToView;
    private javax.swing.JTextField txtfldUserNameToAdd;
    private javax.swing.JTextField txtfldUserNameToModify;
    private javax.swing.JPanel yabAddUser;
    // End of variables declaration//GEN-END:variables
}
